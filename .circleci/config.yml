version: 2 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/using-orbs/

jobs:
  build:
    #working_directory: ~/your-app-name
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          PGHOST: localhost
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: bdd_app_test
          RAILS_ENV: test
      - image: postgres:11
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: bdd_app_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout

      # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        key: circleci-demo-ruby-{{ checksum "Gemfile.lock" }}

      - run: gem install bundler

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      - run: wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash &&  sudo /opt/circleci/.nvm/nvm.sh
      
      - run: export NVM_DIR="/opt/circleci/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

      - run: RAILS_ENV=test bundle exec rake assets:precompile

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: circleci-demo-ruby-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the environment
      #- run: cp .sample.env .env

      # Setup the database
      - run: bundle exec rake db:create

      # Run the tests
      - run: bundle exec rake